
[core]
name: HW_NavyAI
class: CustomUnitMetadata
price: 0
maxHp: 0
mass: 0

copyFrom: Unit_AI_Base.ini





#Some tag is needed for calling an airlift. Nearby carriers will home in on this tag to lift and pick them up. Will then transport this tag towards the enemy base if ALL_ATTACK is on. Else, will transport towards base (if carrying leader) or nearest leader (if not carrying leader)
[hiddenAction_AIR_LIFT]
autoTrigger: false
temporarilyAddTags: NONAVY






#Action type 1: Group and defend at nearest safe point. 
#Leader move: Meet at safe point.
#Followers move: Gather around safe point.

#IF LEADER AND NOT NEAR SAFE SPOT = MOVE TO SAFE SPOT.
[hiddenAction_ParkFormationCentre]
addWaypoint_target_mapMustBeReachable: true
#addWaypoint_triggerActionIfFailed: IGNORE







#Action 2: Formation build. ALl based on tags.

[hiddenAction_NoFormation]
autoTrigger: if not self.hasUnitInTeam(withTag='NForm')
temporarilyRemoveTags: Formation



[hiddenAction_Formation]
autoTrigger: if self.isControlledByAI() and not self.tags(includes='FormLeader') and not self.tags(includes='NONAVY') and not self.tags(includes='Retreat') and not self.tags(includes='Attacking') and not self.hasActiveWaypoint(type='guard') and not self.tags(includes='DEFEND')
requireConditional: if self.hasUnitInTeam(withTag='NForm')
temporarilyAddTags: Formation
clearAllWaypoints: false
addWaypoint_prepend: true
addWaypoint_type: guard
addWaypoint_target_nearestUnit_maxRange: 9999
addWaypoint_target_nearestUnit_team: own
addWaypoint_target_nearestUnit_tagged: NLeaderT
addWaypoint_target_mapMustBeReachable: true
addWaypoint_triggerActionIfFailed: Formation2
temporarilyRemoveTags: FormLeader, NONAVY

[hiddenAction_Formation2]
autoTrigger: false
requireConditional: IGNORE
@copyFromSection: hiddenAction_Formation
addWaypoint_target_nearestUnit_tagged: NLeader3
addWaypoint_triggerActionIfFailed: Formation3

[hiddenAction_Formation3]
autoTrigger: false
requireConditional: IGNORE
@copyFromSection: hiddenAction_Formation
addWaypoint_target_nearestUnit_tagged: NLeader2
addWaypoint_triggerActionIfFailed: Formation4

[hiddenAction_Formation4]
autoTrigger: false
requireConditional: IGNORE
@copyFromSection: hiddenAction_Formation
addWaypoint_target_nearestUnit_tagged: NLeader1
addWaypoint_triggerActionIfFailed: IGNORE














#Action 3: formation attack
[hiddenAction_LeaderAdvance]
autoTrigger: if self.isControlledByAI() and self.tags(includes='NForm') and not self.tags(includes='Retreat') and not self.tags(includes='Attacking') and not self.hasActiveWaypoint(type='attackMove')
requireConditional: if self.hasUnitInTeam(withTag='NAVY_ATTACK')
clearAllWaypoints: false
addWaypoint_prepend: true
addWaypoint_type: attackMove
addWaypoint_target_nearestUnit_maxRange: 99999
addWaypoint_target_nearestUnit_team: enemy
addWaypoint_target_nearestUnit_tagged: Titan
addWaypoint_target_mapMustBeReachable: true
addWaypoint_triggerActionIfFailed: Advance2
temporarilyRemoveTags: NONAVY, FormLeader, NForm


[hiddenAction_RandomAdvance]
autoTrigger: if self.isControlledByAI() and not self.tags(includes='Retreat') and not self.tags(includes='Attacking') and not self.hasActiveWaypoint(type='attackMove')
requireConditional: if self.hasUnitInTeam(withTag='NAVY_ATTACK') and self.noUnitInTeam(withTag='NForm')
@copyFromSection: hiddenAction_LeaderAdvance
addWaypoint_target_nearestUnit_tagged: Unit
#addWaypoint_triggerActionIfFailed: Advance2

[hiddenAction_Advance2]
autoTrigger: false
requireConditional: IGNORE
@copyFromSection: hiddenAction_LeaderAdvance
addWaypoint_target_nearestUnit_tagged: Building
addWaypoint_target_mapMustBeReachable: false
#addWaypoint_triggerActionIfFailed: IGNORE





#action 4: Break formation (If units are damaged and enemies are nearby, the formation breaks.)
[hiddenAction_BreakFormation]
autoTrigger: if self.NumberOfUnitsInTeam(withTag='BREAK_FORMATION', greaterThan=0, withinRange=500) and not self.tags(includes='Retreat')
requireConditional: if self.numberofUnitsInEnemyTeam(greaterThan=0, withinRange=1000)
temporarilyAddTags: Attacking
#temporarilyRemoveTags: Formation



#ATTACK AFTER BREAKING FORMATION OR WHEN DEFENDING.
[hiddenAction_SoloAttack]
autoTrigger: if self.isControlledByAI() and self.tags(includes='Attacking')
requireConditional: if not self.tags(includes='Retreat') and not self.hasActiveWaypoint(type='attackMove')
clearAllWaypoints: false
addWaypoint_prepend: true
addWaypoint_type: attackMove
addWaypoint_target_nearestUnit_maxRange: 9999
addWaypoint_target_nearestUnit_team: enemy
addWaypoint_target_nearestUnit_tagged: FormLeader
addWaypoint_target_mapMustBeReachable: true
addWaypoint_triggerActionIfFailed: Advance2
temporarilyRemoveTags: NONAVY



[hiddenAction_ReformFormations]
autoTrigger: if self.isControlledByAI() and self.hasUnitInTeam(withTag='NAVY_ATTACK') and not self.tags(includes='FormLeader') and not self.tags(includes='Retreat') and not self.tags(includes='DEFEND')
requireConditional: if not self.numberofUnitsInEnemyTeam(greaterThan=0, withinRange=1000) or not self.NumberOfUnitsInTeam(withTag='FormLeader', greaterThan=0, withinRange=1000)
temporarilyRemoveTags: Attacking, BREAK_FORMATION, NONAVY
setResourcesWithLogic: SaveHP = self.hp()
clearAllWaypoints: false
addWaypoint_prepend: true
addWaypoint_type: guard
addWaypoint_target_nearestUnit_maxRange: 9999
addWaypoint_target_nearestUnit_team: own
addWaypoint_target_nearestUnit_tagged: NLeaderT
addWaypoint_target_mapMustBeReachable: true
addWaypoint_triggerActionIfFailed: Formation2









#action 5: Full retreat if local or global enemy is overwhelming
[hiddenAction_Fullretreat]
autoTrigger: if self.isControlledByAI() and not self.hasActiveWaypoint(type='move') and not self.tags(includes='DEFEND')
requireConditional: if not self.hasUnitInTeam(withTag='Repair', greaterThan=0, withinRange=130) and self.hasUnitInTeam(withTag='NAVY_RUN')
clearAllWaypoints: true
addWaypoint_type: move
addWaypoint_target_nearestUnit_maxRange: 9999
addWaypoint_target_nearestUnit_team: own
addWaypoint_target_nearestUnit_tagged: Repair
addWaypoint_target_mapMustBeReachable: false
temporarilyRemoveTags: Attacking, Formation, BREAK_FORMATION






#Data sort 1: Select leader (create a leader priority based on own unit priority, 
#if no leaders of equal priority are nearby. Priority should generaly go to the slowest units. 
#there should be a chance for multiple leaders to appear if they are far apart in order to accomodate defence. 


[hiddenAction_MakeFormationLeaderTitan]
autoTrigger: if self.tags(includes='CanLeadT')
requireConditional: if not self.NumberOfUnitsInTeam(withTag='NLeaderT', greaterThan=0, withinRange=1000)
temporarilyAddTags: FormLeader, NLeaderT, NForm

[hiddenAction_MakeFormationLeader3]
autoTrigger: if self.tags(includes='CanLead3')
requireConditional: if not self.NumberOfUnitsInTeam(withTag='NLeaderT', greaterThan=0, withinRange=1000) and not self.NumberOfUnitsInTeam(withTag='NLeader3', greaterThan=0, withinRange=850)
temporarilyAddTags: FormLeader, NLeader3, NForm

[hiddenAction_MakeFormationLeader2]
autoTrigger: if self.tags(includes='CanLead2')
requireConditional: if not self.NumberOfUnitsInTeam(withTag='NLeaderT', greaterThan=0, withinRange=1000) and not self.NumberOfUnitsInTeam(withTag='NLeader3', greaterThan=0, withinRange=850) and not self.NumberOfUnitsInTeam(withTag='NLeader2', greaterThan=0, withinRange=700)
temporarilyAddTags: FormLeader, NLeader2, NForm

[hiddenAction_MakeFormationLeader1]
autoTrigger: if self.tags and self.tags(includes='CanLead1')
requireConditional: if not self.NumberOfUnitsInTeam(withTag='NForm', greaterThan=0, withinRange=700)
temporarilyAddTags: FormLeader, NLeader1, NForm






[hiddenAction_StuckRemoveLeadership]
autoTrigger: if self.tags(includes='NONAVY')
temporarilyRemoveTags: FormLeader, NLeader1, NLeader2, NLeader3, NLeaderT, NForm

[hiddenAction_Tier1RemoveLeadership]
autoTrigger: if self.tags(includes='NLeader1')
requireConditional: if self.NumberOfUnitsInTeam(withTag='NLeaderT', greaterThan=0, withinRange=1000) or self.NumberOfUnitsInTeam(withTag='NLeader3', greaterThan=0, withinRange=850) or self.NumberOfUnitsInTeam(withTag='NLeader2', greaterThan=0, withinRange=700)
temporarilyRemoveTags: FormLeader, NLeader1, NForm


[hiddenAction_Tier2RemoveLeadership]
autoTrigger: if self.tags(includes='NLeader2')
requireConditional: if self.NumberOfUnitsInTeam(withTag='NLeaderT', greaterThan=0, withinRange=1000) or self.NumberOfUnitsInTeam(withTag='NLeader3', greaterThan=0, withinRange=850)
temporarilyRemoveTags: FormLeader, NLeader2, NForm



[hiddenAction_Tier3RemoveLeadership]
autoTrigger: if self.tags(includes='NLeader3')
requireConditional: if self.NumberOfUnitsInTeam(withTag='NLeaderT', greaterThan=0, withinRange=1000)
temporarilyRemoveTags: FormLeader, NLeader3, NForm








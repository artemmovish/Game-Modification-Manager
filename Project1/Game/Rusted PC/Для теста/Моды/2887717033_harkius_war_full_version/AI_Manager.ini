
[core]
name: HW_AIManager
class: CustomUnitMetadata
price: 0
maxHp: 0
mass: 0

canNotBeGivenOrdersByPlayer: true

showInEditor: false
techLevel: 1
buildSpeed: 1


radius: 0


#armour: 1

softCollisionOnAll: 3


tags: NoCap, Q_Air, Q_Land, Q_Orbit, aiMaster

#isBuilding: true


disableAllUnitCollisions: true

canNotBeDirectlyAttacked: true
isUnselectable: true
canNotBeDamaged: true

disableDeathOnZeroHp: true

onNewMapSpawn: spawnPoint_eachActiveTeam
showOnMinimapToEnemies: false

[resource_unitCount]
hidden: true



#[resource_DRcount]
#hidden: true






#Once estimate calculations are complete, if enemy has no detected forces then go on sheer numbers. 
#Ground tag is seperate to land tag. Ground is for checking the number of grounded units while land is for the current terrain type.



[hiddenAction_setResourcesUnits]
autoTrigger: if self.hasResources(credits=1)
setResourcesWithLogic: unitCount = self.resource(type='TotalUnit')

[hiddenAction_unitOverride]
autoTrigger: if not self.hasResources(credits=1)
setResourcesWithLogic: unitCount = 200



[hiddenAction_endRetreat]
autoTrigger: true
temporarilyRemoveTags: NAVY_RUN, ALL_RUN



[hiddenAction_TriggerAttack]
autoTrigger: if self.resource(type='AG') > self.resource(type='EGround') and self.resource(type='AA') > self.resource(type='EAir') and self.resource(type='Artillery') > self.resource(type='ETurret') and self.resource(type='AntiArmour') > self.resource(type='EArmour') and self.resource(type='AntiLD') > self.resource(type='ELD') or self.resource(type='unitCount', greaterThan=120)

#{ AG  } > { EGround } and { AA } > { EAir } and { AntiNavy } > { ENavy } and { Artillery} > { ETurret } and { AntiShield } > { EShield } and { AntiArmour } > { EArmour } and { AntiLD } > { ELD }

# and self.resource(type='AntiShield') > self.resource(type='EShield')

temporarilyAddTags: ALL_ATTACK, NAVY_ATTACK, Can_Run, Can_Run_NAVY




[hiddenAction_DoNotAttack]
autoTrigger: if self.resource(type='AG') < self.resource(type='EGround') and not self.resource(type='unitCount', greaterThan=100) or self.resource(type='AA') < self.resource(type='EAir') and not self.resource(type='unitCount', greaterThan=100) or self.resource(type='Artillery') < self.resource(type='ETurret') and not self.resource(type='unitCount', greaterThan=100) or self.resource(type='AntiArmour') < self.resource(type='EArmour') and not self.resource(type='unitCount', greaterThan=100) or self.resource(type='AntiLD') < self.resource(type='ELD') and not self.resource(type='unitCount', greaterThan=100)
temporarilyRemoveTags: ALL_ATTACK


[hiddenAction_DoNotAttack2]
autoTrigger: if self.resource(type='AG') < self.resource(type='EGround') / 1.5 and not self.resource(type='unitCount', greaterThan=90) and self.tags(includes='Can_Run') or self.resource(type='AA') < self.resource(type='EAir') / 1.5 and not self.resource(type='unitCount', greaterThan=90) and self.tags(includes='Can_Run') or self.resource(type='Artillery') < self.resource(type='ETurret') / 1.5 and not self.resource(type='unitCount', greaterThan=90) and self.tags(includes='Can_Run') or self.resource(type='AntiArmour') < self.resource(type='EArmour') / 1.5 and not self.resource(type='unitCount', greaterThan=90) and self.tags(includes='Can_Run') or self.resource(type='AntiLD') < self.resource(type='ELD') / 1.5 and not self.resource(type='unitCount', greaterThan=90) and self.tags(includes='Can_Run')
temporarilyAddTags: ALL_RUN
temporarilyRemoveTags: Can_Run
#alsoQueueAction: endRetreat


[hiddenAction_TriggerAttackNavy]
autoTrigger: if self.resource(type='AntiNavy') + self.resource(type='Water') > self.resource(type='ENavy') * 1.3 or self.resource(type='unitCount', greaterThan=120)
temporarilyAddTags: NAVY_ATTACK, Can_Run_NAVY

[hiddenAction_DoNotAttackNavy]
autoTrigger: if self.resource(type='AntiNavy') + self.resource(type='Water') < self.resource(type='ENavy') * 1.3 and not self.resource(type='unitCount', greaterThan=90)
temporarilyRemoveTags: NAVY_ATTACK


[hiddenAction_DoNotAttackNavy2]
autoTrigger: if self.resource(type='AntiNavy') + self.resource(type='Water') < self.resource(type='ENavy') / 1.3 and not self.resource(type='unitCount', greaterThan=90) and self.tags(includes='Can_Run_NAVY')
temporarilyAddTags: NAVY_RUN
temporarilyRemoveTags: Can_Run_NAVY
#alsoQueueAction: endRetreat

# and self.numberofUnitsInTeam(withTag='Advancing', greaterThan=0)









#[hiddenAction_setResourcesDropReq]
#autoTrigger: true
#setResourcesWithLogic: DRcount = self.numberofUnitsInTeam(withTag='DROP_REQ')





#If units are present that cannot reach a target then dropships will be quotad to carry them.
[hiddenAction_SetQuotasLand]
autoTrigger: if (self.resource(type='EAG') < self.resource(type='EAA') * 1.09) and not (self.numberofUnitsInTeam(withTag='DROP_REQ') * 12 > self.resource(type='unitCount'))
temporarilyAddTags: Q_Land
temporarilyRemoveTags: Q_Air, Q_Orbit

[hiddenAction_SetQuotasAir]
autoTrigger: if self.resource(type='EAA') * 1.09 < self.resource(type='EAG') or (self.numberofUnitsInTeam(withTag='DROP_REQ') * 12 > self.resource(type='unitCount'))
temporarilyAddTags: Q_Air
temporarilyRemoveTags: Q_Land, Q_Orbit

[hiddenAction_SetQuotasOrbit]
autoTrigger: if self.resource(type='EAO') * 2.7 < self.resource(type='EAG') and self.resource(type='EAO') * 2.7 < self.resource(type='EAA')
# and not self.hasUnitInTeam(withTag='Obomb', greaterThan=10)
# and self.hasUnitInTeam(withTag='SpacePort', greaterThan=0)
temporarilyAddTags: Q_Orbit
#temporarilyRemoveTags: Q_Air, Q_Land


[hiddenAction_SetQuotasOrbit2]
autoTrigger: if self.resource(type='EAO') * 8 < self.resource(type='EAG') and self.resource(type='EAO') * 8 < self.resource(type='EAA') and self.hasUnitInTeam(withTag='SpacePort', greaterThan=0) or self.resource(type='AO') < self.resource(type='EOrbit') / 4 and self.hasUnitInTeam(withTag='SpacePort', greaterThan=0)
temporarilyAddTags: Q_Orbit
temporarilyRemoveTags: Q_Air, Q_Land









[hiddenAction_SetQuotasAG]
autoTrigger: if self.resource(type='EGround') +  self.resource(type='ENavy') > self.resource(type='AG')
temporarilyAddTags: Q_AG
[hiddenAction_SetQuotasStopAG]
autoTrigger: if self.resource(type='EGround') +  self.resource(type='ENavy') < self.resource(type='AG')
temporarilyRemoveTags: Q_AG

[hiddenAction_SetQuotasAA]
autoTrigger: if self.resource(type='EAir') > self.resource(type='AA')
temporarilyAddTags: Q_AA
[hiddenAction_SetQuotasStopAA]
autoTrigger: if self.resource(type='EAir') < self.resource(type='AA')
temporarilyRemoveTags: Q_AA

[hiddenAction_SetQuotasAO]
autoTrigger: if self.resource(type='EOrbit') * 2 > self.resource(type='AO')
temporarilyAddTags: Q_AO
[hiddenAction_SetQuotasStopAO]
autoTrigger: if self.resource(type='EOrbit') * 2 < self.resource(type='AO')
temporarilyRemoveTags: Q_AO

[hiddenAction_SetQuotasAW]
autoTrigger: if self.resource(type='ENavy') + self.resource(type='EWater') > self.resource(type='AntiNavy') + self.resource(type='Water')
# / 1.2
temporarilyAddTags: Q_Water, Q_Navy
#Quota for navy buildup. Anti-water.


[hiddenAction_SetQuotasStopAW]
autoTrigger: if self.resource(type='ENavy') + self.resource(type='EWater') < self.resource(type='AntiNavy') + self.resource(type='Water') / 1.2
temporarilyRemoveTags: Q_Water, Q_Navy

[hiddenAction_SetQuotasCliff]
autoTrigger: if self.resource(type='ECliff') > self.resource(type='Cliff') * 1.5 and self.tags(includes='Q_Land')
temporarilyAddTags: Q_Cliff

[hiddenAction_SetQuotasStopCliff]
autoTrigger: if self.resource(type='ECliff') < self.resource(type='Cliff') * 1.5 or not self.tags(includes='Q_Land')
temporarilyRemoveTags: Q_Cliff



#QUota for building submarines here. 
[hiddenAction_SetQuotasSubs]
autoTrigger: if self.resource(type='EAntiNavy') > self.resource(type='AS')
temporarilyAddTags: Q_Subs

[hiddenAction_SetQuotasStopSubs]
autoTrigger: if self.resource(type='EAntiNavy') < self.resource(type='AS')
temporarilyRemoveTags: Q_Subs





[hiddenAction_SetQuotasSiege]
autoTrigger: if self.resource(type='ETurret') > self.resource(type='Artillery')
temporarilyAddTags: Q_Range

[hiddenAction_SetQuotasStopSiege]
autoTrigger: if self.resource(type='ETurret') < self.resource(type='Artillery')
temporarilyRemoveTags: Q_Range


[hiddenAction_SetQuotasBreakLD]
autoTrigger: if self.resource(type='ELD') > self.resource(type='AntiLD')
temporarilyAddTags: Q_AntiLD

[hiddenAction_SetQuotasStopBreakLD]
autoTrigger: if self.resource(type='ELD') < self.resource(type='AntiLD')
temporarilyRemoveTags: Q_AntiLD

[hiddenAction_SetQuotasAntiShield]
autoTrigger: if self.resource(type='EShield') > self.resource(type='AntiShield')
temporarilyAddTags: Q_AntiShield

[hiddenAction_SetQuotasStopAntiShield]
autoTrigger: if self.resource(type='EShield') < self.resource(type='AntiShield')
temporarilyRemoveTags: Q_AntiShield

[hiddenAction_SetQuotasShield]
autoTrigger: if self.resource(type='EBeam') > self.resource(type='Shield')
temporarilyAddTags: Q_Shield

[hiddenAction_SetQuotasStopShield]
autoTrigger: if self.resource(type='EBeam') < self.resource(type='Shield')
temporarilyRemoveTags: Q_Shield

[hiddenAction_SetQuotasAntiArmour]
autoTrigger: if self.resource(type='EArmour') > self.resource(type='AntiArmour')
temporarilyAddTags: Q_AntiArmour

[hiddenAction_SetQuotasStopAntiArmour]
autoTrigger: if self.resource(type='EArmour') < self.resource(type='AntiArmour')
temporarilyRemoveTags: Q_AntiArmour

[hiddenAction_SetQuotasLD]
autoTrigger: if self.resource(type='EArtillery') > self.resource(type='LD')
temporarilyAddTags: Q_LD

[hiddenAction_SetQuotasStopLD]
autoTrigger: if self.resource(type='EArtillery') < self.resource(type='LD')
temporarilyRemoveTags: Q_LD


[hiddenAction_SetQuotasAStealth]
autoTrigger: if self.resource(type='EStealth') * 3 > self.resource(type='AntiStealth')
temporarilyAddTags: Q_AStealth

[hiddenAction_SetQuotasStopAStealth]
autoTrigger: if self.resource(type='EStealth') * 3 < self.resource(type='AntiStealth')
temporarilyRemoveTags: Q_AStealth





[graphics]
total_frames: 1
image:       SHARED:blank.png
image_wreak: NONE
image_turret: NONE


image_shadow: AUTO
shadowOffsetX:0.5
shadowOffsetY:0.5




[attack]
canAttack: false


[movement]
movementType: NONE


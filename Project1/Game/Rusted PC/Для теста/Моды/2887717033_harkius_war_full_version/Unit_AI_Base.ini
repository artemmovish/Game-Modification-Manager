
[core]
name: HW_UnitAIBase
class: CustomUnitMetadata
price: 0
maxHp: 0
mass: 0

canNotBeGivenOrdersByPlayer: false


techLevel: 1
buildSpeed: 1


radius: 0


#armour: 1

softCollisionOnAll: 3

canNotBeDirectlyAttacked: false
isUnselectable: false
canNotBeDamaged: false

disableDeathOnZeroHp: false




[resource_SaveHP]
hidden: true






#Data sort 1: Select leader (create a leader priority based on own unit priority, 
#if no leaders of equal priority are nearby. Priority should generaly go to the slowest units. 
#there should be a chance for multiple leaders to appear if they are far apart in order to accomodate defence. 
#this has to be before everything else due to tag ordering and the DROP_REQ tag. 

[hiddenAction_MakeFormationLeaderTitan]
autoTrigger: if self.tags(includes='CanLeadT') and not self.tags(includes='DROP_REQ')
requireConditional: if not self.NumberOfUnitsInTeam(withTag='LeaderT', greaterThan=0, withinRange=1000)
temporarilyAddTags: FormLeader, LeaderT

[hiddenAction_MakeFormationLeader3]
autoTrigger: if self.tags and self.tags(includes='CanLead3') and not self.tags(includes='DROP_REQ')
requireConditional: if not self.NumberOfUnitsInTeam(withTag='LeaderT', greaterThan=0, withinRange=1000) and not self.NumberOfUnitsInTeam(withTag='Leader3', greaterThan=0, withinRange=800)
temporarilyAddTags: FormLeader, Leader3

[hiddenAction_MakeFormationLeader2]
autoTrigger: if self.tags and self.tags(includes='CanLead2') and not self.tags(includes='DROP_REQ')
requireConditional: if not self.NumberOfUnitsInTeam(withTag='LeaderT', greaterThan=0, withinRange=1000) and not self.NumberOfUnitsInTeam(withTag='Leader3', greaterThan=0, withinRange=800) and not not self.NumberOfUnitsInTeam(withTag='Leader2', greaterThan=0, withinRange=800)
temporarilyAddTags: FormLeader, Leader2

[hiddenAction_MakeFormationLeader1]
autoTrigger: if self.tags and self.tags(includes='CanLead1') and not self.tags(includes='DROP_REQ')
requireConditional: if not self.NumberOfUnitsInTeam(withTag='FormLeader', greaterThan=0, withinRange=800)
temporarilyAddTags: FormLeader, Leader1








#Action type 1: Group and defend at nearest safe point. 
#Leader move: Meet at safe point.
#Followers move: Gather around safe point.

#IF LEADER AND NOT NEAR SAFE SPOT = MOVE TO SAFE SPOT.
[hiddenAction_ParkFormationCentre]
autoTrigger: if self.isControlledByAI() and self.tags(includes='FormLeader') and not self.tags(includes='Retreat') and not self.tags(includes='DEFEND') and not self.tags(includes='Attacking') and not self.hasActiveWaypoint(type='touchTarget')
requireConditional: if self.hasUnitInTeam(withTag='ALL_ATTACK') and not self.NumberOfUnitsInTeam(withTag='Safety', greaterThan=0, withinRange=130)
clearAllWaypoints: true
addWaypoint_prepend: true
addWaypoint_type: touchTarget
addWaypoint_target_nearestUnit_maxRange: 9999
addWaypoint_target_nearestUnit_team: own
addWaypoint_target_nearestUnit_tagged: Safety
addWaypoint_target_mapMustBeReachable: true
addWaypoint_triggerActionIfFailed: AIR_LIFT
temporarilyRemoveTags: DROP_REQ






#Action 2: Formation build. All based on tags.

[hiddenAction_NoFormation]
autoTrigger: if self.noUnitInTeam(withTag='FormLeader')
temporarilyRemoveTags: Formation



[hiddenAction_Formation]
autoTrigger: if self.isControlledByAI() and not self.tags(includes='FormLeader') and not self.tags(includes='DROP_REQ') and not self.tags(includes='Retreat') and not self.tags(includes='Attacking') and not self.hasActiveWaypoint(type='guard') and not self.tags(includes='DEFEND')
requireConditional: if self.hasUnitInTeam(withTag='FormLeader')
temporarilyAddTags: Formation
clearAllWaypoints: false
addWaypoint_prepend: true
addWaypoint_type: guard
addWaypoint_target_nearestUnit_maxRange: 9999
addWaypoint_target_nearestUnit_team: own
addWaypoint_target_nearestUnit_tagged: LeaderT
addWaypoint_target_mapMustBeReachable: true
addWaypoint_triggerActionIfFailed: Formation2
temporarilyRemoveTags: FormLeader, DROP_REQ

[hiddenAction_Formation2]
autoTrigger: false
requireConditional: IGNORE
@copyFromSection: hiddenAction_Formation
addWaypoint_target_nearestUnit_tagged: Leader3
addWaypoint_triggerActionIfFailed: Formation3

[hiddenAction_Formation3]
autoTrigger: false
requireConditional: IGNORE
@copyFromSection: hiddenAction_Formation
addWaypoint_target_nearestUnit_tagged: Leader2
addWaypoint_triggerActionIfFailed: Formation4

[hiddenAction_Formation4]
autoTrigger: false
requireConditional: IGNORE
@copyFromSection: hiddenAction_Formation
addWaypoint_target_nearestUnit_tagged: Leader1
addWaypoint_triggerActionIfFailed: AIR_LIFT














#Action 3: formation attack
[hiddenAction_LeaderAdvance]
autoTrigger: if self.isControlledByAI() and self.tags(includes='FormLeader') and not self.tags(includes='Retreat') and not self.hasActiveWaypoint(type='follow') and not self.tags(includes='Attacking') and not self.tags(includes='DEFEND')
requireConditional: if self.hasUnitInTeam(withTag='ALL_ATTACK')
clearAllWaypoints: false
addWaypoint_prepend: true
addWaypoint_type: follow
addWaypoint_target_nearestUnit_maxRange: 99999
addWaypoint_target_nearestUnit_team: enemy
addWaypoint_target_nearestUnit_tagged: Titan
addWaypoint_target_mapMustBeReachable: true
addWaypoint_triggerActionIfFailed: Advance2
temporarilyRemoveTags: DROP_REQ




[hiddenAction_RandomAdvance]
autoTrigger: if self.isControlledByAI() and self.hasUnitInTeam(withTag='ALL_ATTACK') and not self.tags(includes='Retreat') and not self.tags(includes='Attacking') and not self.hasActiveWaypoint(type='follow') and not self.tags(includes='DEFEND')
requireConditional: if self.noUnitInTeam(withTag='FormLeader')
@copyFromSection: hiddenAction_LeaderAdvance
addWaypoint_target_nearestUnit_tagged: Titan
addWaypoint_triggerActionIfFailed: Advance2



[hiddenAction_Advance2]
autoTrigger: false
requireConditional: IGNORE
@copyFromSection: hiddenAction_LeaderAdvance
addWaypoint_target_nearestUnit_tagged: Building
addWaypoint_triggerActionIfFailed: AIR_LIFT







#action 4: Break formation (If units are damaged and enemies are nearby, the formation breaks.)
[hiddenAction_BreakFormation]
autoTrigger: if self.NumberOfUnitsInTeam(withTag='BREAK_FORMATION', greaterThan=0, withinRange=500) and not self.NumberOfUnitsInTeam(withTag='Safety', greaterThan=0, withinRange=200) and not self.tags(includes='DEFEND') and not self.tags(includes='Retreat')
requireConditional: if self.numberofUnitsInEnemyTeam(greaterThan=0, withinRange=1000) and self.NumberOfUnitsInTeam(withTag='Formation', greaterThan=2, withinRange=1000)
temporarilyAddTags: Attacking
#temporarilyRemoveTags: Formation




[hiddenAction_ReformFormations]
#Reform groups while attacking. IF
#ALL_ATTACK true and not retreat, leading, defending AND no enemies near or no nearby formation leaders (too far from army)
#OR no units nearby breaking formation (Ignore form leader check as form leaders need to coagulate.)
autoTrigger: if self.isControlledByAI() and not self.tags(includes='Retreat') and not self.tags(includes='DEFEND') and self.tags(includes='Attacking')
requireConditional: if (   not self.tags(includes='FormLeader') and self.hasUnitInTeam(withTag='ALL_ATTACK') and ( not self.numberofUnitsInEnemyTeam(greaterThan=0, withinRange=1000) or not self.NumberOfUnitsInTeam(withTag='FormLeader', greaterThan=0, withinRange=1000) )  ) or not self.NumberOfUnitsInTeam(withTag='BREAK_FORMATION', greaterThan=0, withinRange=550)

temporarilyRemoveTags: Attacking, BREAK_FORMATION, DROP_REQ
setResourcesWithLogic: SaveHP = self.hp()
clearAllWaypoints: false
addWaypoint_prepend: true
addWaypoint_type: guard
addWaypoint_target_nearestUnit_maxRange: 9999
addWaypoint_target_nearestUnit_team: own
addWaypoint_target_nearestUnit_tagged: LeaderT
addWaypoint_target_mapMustBeReachable: true
addWaypoint_triggerActionIfFailed: Formation2
temporarilyAddTags: Formation



[hiddenAction_ReformFormations2]
#Regroup to Safey position if not all-out-attack and no nearby combat incentive (enemies or support)
autoTrigger: if self.isControlledByAI() and not self.tags(includes='Retreat') and not self.tags(includes='DEFEND') and self.tags(includes='Attacking') and self.noUnitInTeam(withTag='ALL_ATTACK')
requireConditional: if not self.numberofUnitsInEnemyTeam(greaterThan=0, withinRange=1000) and not self.NumberOfUnitsInTeam(withTag='HELP', greaterThan=0, withinRange=900)
@copyFromSection: hiddenAction_ReformFormations
addWaypoint_target_nearestUnit_tagged: Safety






#ATTACK AFTER BREAKING FORMATION OR WHEN DEFENDING.
[hiddenAction_SoloAttack]
autoTrigger: if self.isControlledByAI() and self.tags(includes='Attacking') and not self.tags(includes='Retreat') and not self.hasActiveWaypoint(type='follow')
requireConditional: if self.tags(includes='CounterAttack') or self.tags(includes='DEFEND')
clearAllWaypoints: false
addWaypoint_prepend: true
addWaypoint_type: follow
addWaypoint_target_nearestUnit_maxRange: 9999
addWaypoint_target_nearestUnit_team: enemy
addWaypoint_target_nearestUnit_tagged: Unit
addWaypoint_target_mapMustBeReachable: true
addWaypoint_triggerActionIfFailed: Advance2
temporarilyRemoveTags: DROP_REQ









#action 5: Full retreat if local or global enemy is overwhelming
[hiddenAction_Fullretreat]
autoTrigger: if self.isControlledByAI() and self.hasUnitInTeam(withTag='ALL_RUN') and not self.hasActiveWaypoint(type='move') and not self.tags(includes='DEFEND')
requireConditional: if not self.hasUnitInTeam(withTag='Repair', greaterThan=0, withinRange=120)
clearAllWaypoints: true
addWaypoint_type: move
addWaypoint_target_nearestUnit_maxRange: 9999
addWaypoint_target_nearestUnit_team: own
addWaypoint_target_nearestUnit_tagged: Repair
temporarilyRemoveTags: Attacking, Formation, BREAK_FORMATION









#Action 6: respond to HELP signal
[hiddenAction_Defend]
autoTrigger: if self.hasUnitInTeam(withTag='HELP') and self.isControlledByAI() and not self.tags(includes='Retreat') and not self.hasActiveWaypoint(type='touchTarget') and not self.tags(includes='CounterAttack')
requireConditional: if self.NumberOfUnitsInTeam(withTag='HELP', greaterThan=0, withinRange=1000) or self.NumberOfUnitsInTeam(withTag='HELP', greaterThan=4)
temporarilyAddTags: DEFEND
temporarilyRemoveTags: Advancing, Attacking, BREAK_FORMATION
clearAllWaypoints: false
addWaypoint_prepend: true
addWaypoint_type: touchTarget
addWaypoint_target_nearestUnit_maxRange: 9999
addWaypoint_target_nearestUnit_team: own
addWaypoint_target_nearestUnit_tagged: HELP
addWaypoint_target_mapMustBeReachable: true

[hiddenAction_startDefence]
autoTrigger: if self.tags(includes='DEFEND')
requireConditional: if self.NumberOfUnitsInTeam(withTag='HELP', greaterThan=0, withinRange=120) and self.numberofUnitsInEnemyTeam(greaterThan=0, withinRange=1000)
temporarilyAddTags: Attacking, CounterAttack
#, DROP_REQ

# and not self.NumberOfUnitsInTeam(withTag='ALL_ATTACK', greaterThan=0)
[hiddenAction_Stop_Defence]
autoTrigger: if self.isControlledByAI() and self.tags(includes='CounterAttack')
requireConditional: if self.noUnitInTeam(withTag='ALL_ATTACK') and (not self.NumberOfUnitsInTeam(withTag='HELP', greaterThan=0, withinRange=1000) or not self.numberofUnitsInEnemyTeam(greaterThan=0, withinRange=1000))
temporarilyRemoveTags: DEFEND, Attacking, CounterAttack, BREAK_FORMATION
clearAllWaypoints: false
addWaypoint_prepend: true
addWaypoint_type: move
addWaypoint_target_nearestUnit_maxRange: 9999
addWaypoint_target_nearestUnit_team: own
addWaypoint_target_nearestUnit_tagged: Safety
addWaypoint_target_mapMustBeReachable: true


[hiddenAction_Stop_Defence2]
autoTrigger: if self.isControlledByAI() and self.tags(includes='CounterAttack')
requireConditional: if self.hasUnitInTeam(withTag='ALL_ATTACK') and (not self.NumberOfUnitsInTeam(withTag='HELP', greaterThan=0, withinRange=1000) or not self.numberofUnitsInEnemyTeam(greaterThan=0, withinRange=1000))
temporarilyRemoveTags: DEFEND, Attacking, CounterAttack, BREAK_FORMATION
clearAllWaypoints: true










#Private act 1: Retreat, some units should not withdraw if in a formation. Always withdraw to repair point.


[hiddenAction_retreat]
autoTrigger: if self.isControlledByAI() and self.tags(includes='Retreat') and not self.hasActiveWaypoint(type='move')
requireConditional: if not self.hasUnitInTeam(withTag='Repair', greaterThan=0, withinRange=120)
clearAllWaypoints: true
addWaypoint_type: move
addWaypoint_target_nearestUnit_maxRange: 9999
addWaypoint_target_nearestUnit_team: own
addWaypoint_target_nearestUnit_tagged: Repair
temporarilyRemoveTags: Attacking, CounterAttack, DEFEND, Formation, BREAK_FORMATION, DROP_REQ


#Some tag is needed for calling an airlift. Nearby carriers will home in on this tag to lift and pick them up. Will then transport this tag towards the enemy base if ALL_ATTACK is on. Else, will transport towards base (if carrying leader) or nearest leader (if not carrying leader)
[hiddenAction_AIR_LIFT]
autoTrigger: false
temporarilyAddTags: DROP_REQ
temporarilyRemoveTags: Formation



#Enter dropshop
[hiddenAction_enterDropship]
autoTrigger: if self.isControlledByAI() and self.tags(includes='DROP_REQ') and not self.tags(includes='Retreat')
# and not self.tags(includes='DEFEND')
clearAllWaypoints: true
addWaypoint_type: loadInto
addWaypoint_target_randomUnit_maxRange: 9999
addWaypoint_target_randomUnit_team: own
addWaypoint_target_randomUnit_tagged: dropship









[hiddenAction_StuckRemoveLeadership]
autoTrigger: if self.tags(includes='DROP_REQ')
temporarilyRemoveTags: FormLeader, Leader1, Leader2, Leader3, LeaderT

[hiddenAction_Tier1RemoveLeadership]
autoTrigger: if self.tags(includes='Leader1')
requireConditional: if self.NumberOfUnitsInTeam(withTag='LeaderT', greaterThan=0, withinRange=1000) or self.NumberOfUnitsInTeam(withTag='Leader3', greaterThan=0, withinRange=800) or self.NumberOfUnitsInTeam(withTag='Leader2', greaterThan=0, withinRange=800)
temporarilyRemoveTags: FormLeader, Leader1


[hiddenAction_Tier2RemoveLeadership]
autoTrigger: if self.tags(includes='Leader2')
requireConditional: if self.NumberOfUnitsInTeam(withTag='LeaderT', greaterThan=0, withinRange=1000) or self.NumberOfUnitsInTeam(withTag='Leader3', greaterThan=0, withinRange=800)
temporarilyRemoveTags: FormLeader, Leader2



[hiddenAction_Tier3RemoveLeadership]
autoTrigger: if self.tags(includes='Leader3')
requireConditional: if self.NumberOfUnitsInTeam(withTag='LeaderT', greaterThan=0, withinRange=1000)
temporarilyRemoveTags: FormLeader, Leader3




#Update health: While in formation, update health whenever it increases. If health drops then add Hurt tag. 
[hiddenAction_UpdateHealth]
autoTrigger: if self.resource(type='hp') > self.resource(type='SaveHP') and (self.tags(includes='Formation') or self.tags(includes='FormLeader'))
setResourcesWithLogic: SaveHP = self.hp()

[hiddenAction_DetectDamage]
autoTrigger: if self.resource(type='hp') < self.resource(type='SaveHP') and (self.tags(includes='Formation') or self.tags(includes='FormLeader'))
setResourcesWithLogic: SaveHP = self.hp()
temporarilyAddTags: BREAK_FORMATION


[hiddenAction_FullHp]
autoTrigger: if self.hp(full=true) and self.tags(includes='BREAK_FORMATION')
temporarilyRemoveTags: BREAK_FORMATION
setResourcesWithLogic: SaveHP = self.hp()










[graphics]
total_frames: 1
image:       SHARED:blank.png
image_wreak: NONE
image_turret: NONE




image_shadow: AUTO
shadowOffsetX:0.5
shadowOffsetY:0.5




[attack]
canAttack: false


[movement]
movementType: NONE

